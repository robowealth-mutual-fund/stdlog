// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	stdlog "github.com/robowealth-mutual-fund/stdlog"
	mock "github.com/stretchr/testify/mock"
)

// Logger is an autogenerated mock type for the Logger type
type Logger struct {
	mock.Mock
}

// Debug provides a mock function with given fields: msg, args
func (_m *Logger) Debug(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// DebugWithAttrs provides a mock function with given fields: msg, fields
func (_m *Logger) DebugWithAttrs(msg string, fields stdlog.Attrs) {
	_m.Called(msg, fields)
}

// Error provides a mock function with given fields: msg, err, args
func (_m *Logger) Error(msg string, err error, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg, err)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// ErrorWithAttrs provides a mock function with given fields: msg, fields
func (_m *Logger) ErrorWithAttrs(msg string, fields stdlog.Attrs) {
	_m.Called(msg, fields)
}

// Info provides a mock function with given fields: msg, args
func (_m *Logger) Info(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// InfoWithAttrs provides a mock function with given fields: msg, fields
func (_m *Logger) InfoWithAttrs(msg string, fields stdlog.Attrs) {
	_m.Called(msg, fields)
}

// Warn provides a mock function with given fields: msg, args
func (_m *Logger) Warn(msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// WarnWithAttrs provides a mock function with given fields: msg, fields
func (_m *Logger) WarnWithAttrs(msg string, fields stdlog.Attrs) {
	_m.Called(msg, fields)
}

type mockConstructorTestingTNewLogger interface {
	mock.TestingT
	Cleanup(func())
}

// NewLogger creates a new instance of Logger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLogger(t mockConstructorTestingTNewLogger) *Logger {
	mock := &Logger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
